
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьСписокНаСервере();
	//ГруппаРассылокИОповещений =  Неопределено;
	//СтруктураНастроек = ХранилищеОбщихНастроек.Загрузить("Обработка.ОповещенияПриРаботеСЗаказами.Форма.Форма","СтруктураНастроек");
	//Если ТипЗнч(СтруктураНастроек) = Тип("Структура") Тогда
	//	ТаблицаШаблонов = СтруктураНастроек.ТаблицаШаблонов;
	//	Если ТаблицаШаблонов.Количество() > 0 Тогда
	//		ГруппаРассылокИОповещений =  ТаблицаШаблонов[0].ГруппаРассылокИОповещений;
	//	КонецЕсли;
	//КонецЕсли;
	//
	//Если ГруппаРассылокИОповещений =  Неопределено Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ДанныеПоследнихОповещений.ВидОповещения КАК ВидОповещения,
	//	|	ДанныеПоследнихОповещений.ИсточникОповещения КАК ИсточникОповещения,
	//	|	ДанныеПоследнихОповещений.Подписчик КАК Подписчик,
	//	|	ДанныеПоследнихОповещений.ДанныеПоследнегоОповещения КАК ДанныеПоследнегоОповещения
	//	|ИЗ
	//	|	РегистрСведений.ДанныеПоследнихОповещений КАК ДанныеПоследнихОповещений
	//	|ГДЕ
	//	|	ДанныеПоследнихОповещений.ВидОповещения.ГруппаРассылокИОповещений = &ГруппаРассылокИОповещений";	
	//
	//Запрос.УстановитьПараметр("ГруппаРассылокИОповещений", ГруппаРассылокИОповещений);
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	стр = Список.Добавить();
	//	стр.ВидОповещения = ВыборкаДетальныеЗаписи.ВидОповещения;
	//	стр.ЗаказКлиента = ВыборкаДетальныеЗаписи.ИсточникОповещения;
	//	стр.Партнер = ВыборкаДетальныеЗаписи.Подписчик;
	//	стр.ДатаОповещения = ВыборкаДетальныеЗаписи.ДанныеПоследнегоОповещения.Получить().Дата;
	//КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокНаСервере()
	
	ГруппаРассылокИОповещений =  Неопределено;
	СтруктураНастроек = ХранилищеОбщихНастроек.Загрузить("Обработка.ОповещенияПриРаботеСЗаказами.Форма.Форма","СтруктураНастроек");
	Если ТипЗнч(СтруктураНастроек) = Тип("Структура") Тогда
		ТаблицаШаблонов = СтруктураНастроек.ТаблицаШаблонов;
		Если ТаблицаШаблонов.Количество() > 0 Тогда
			ГруппаРассылокИОповещений =  ТаблицаШаблонов[0].ГруппаРассылокИОповещений;
		КонецЕсли;
	КонецЕсли;
	
	Если ГруппаРассылокИОповещений =  Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеПоследнихОповещений.ВидОповещения КАК ВидОповещения,
		|	ДанныеПоследнихОповещений.ИсточникОповещения КАК ИсточникОповещения,
		|	ДанныеПоследнихОповещений.Подписчик КАК Подписчик,
		|	ДанныеПоследнихОповещений.ДанныеПоследнегоОповещения КАК ДанныеПоследнегоОповещения
		|ИЗ
		|	РегистрСведений.ДанныеПоследнихОповещений КАК ДанныеПоследнихОповещений
		|ГДЕ
		|	ДанныеПоследнихОповещений.ВидОповещения.ГруппаРассылокИОповещений = &ГруппаРассылокИОповещений";	
	
	Запрос.УстановитьПараметр("ГруппаРассылокИОповещений", ГруппаРассылокИОповещений);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		стр = Список.Добавить();
		стр.ВидОповещения = ВыборкаДетальныеЗаписи.ВидОповещения;
		стр.ЗаказКлиента = ВыборкаДетальныеЗаписи.ИсточникОповещения;
		стр.Партнер = ВыборкаДетальныеЗаписи.Подписчик;
		Попытка
			стр.ДатаОповещения = ВыборкаДетальныеЗаписи.ДанныеПоследнегоОповещения.Получить().Дата;
		Исключение
			стр.ДатаОповещения = стр.ЗаказКлиента.Дата;
		КонецПопытки;
	КонецЦикла;
	Список.Сортировать("ДатаОповещения УБЫВ");
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СписокПередУдалениемНаСервере(Заказ)

	//НЗ = РегистрыСведений.ДанныеПоследнихОповещений.СоздатьНаборЗаписей();
	//НЗ.Отбор.ИсточникОповещения.Установить(Заказ);
	//НЗ.Записать(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередУдалением(Элемент, Отказ)
	
	//ТД = Элемент.ТекущиеДанные;
	//Если ТД = Неопределено Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//СписокПередУдалениемНаСервере(ТД.ЗаказКлиента);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписок(Команда)
	Список.Очистить();
	ЗаполнитьСписокНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СортироватьПоУбыванию(Команда)
	Список.Сортировать("ДатаОповещения УБЫВ");
КонецПроцедуры

&НаКлиенте
Процедура СортироватьПоВозрастанию(Команда)
	Список.Сортировать("ДатаОповещения");
КонецПроцедуры
